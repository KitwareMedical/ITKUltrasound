# ITK image filters wrapped for ITKUltrasound `itk::SliceSeriesSpecialCoordinatesImage` inputs.
# Must be wrapped in a separate file after `itkSliceSeriesSpecialCoordinatesImage.wrap` so that
# SWIG does not implicitly define erroneous overrides for template methods such as
# `TransformPhysicalPointToContinuousIndex`, etc.

# See `WRAPPER_SUBMODULE_ORDER` in CMakeLists.txt for where
# `itkSliceSeriesSpecialCoordinatesImageFilters.wrap` is set to
# be wrapped after `itkSliceSeriesSpecialCoordinatesImage.wrap`.

itk_wrap_include("itkSliceSeriesSpecialCoordinatesImage.h")
itk_wrap_include("itkEuler3DTransform.h")

itk_wrap_class("itk::ImageSource" POINTER)
  if(ITK_WRAP_unsigned_char)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIUC3E3D" "${SSSCI_template}")
  endif()
  if(ITK_WRAP_float)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIF3E3D" "${SSSCI_template}")
  endif()
itk_end_wrap_class()

itk_wrap_include("itkImage.h")
itk_wrap_class("itk::ImageToImageFilter" POINTER)
  if(ITK_WRAP_unsigned_char)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("IUC3SSSCIUC3E3D" "itk::Image< unsigned char, 3 >, ${SSSCI_template}")
    # itk_wrap_template("SSSCIUC3E3DSSSCIUC3E3D" "${SSSCI_template}, ${SSSCI_template}")  # procedural form defaults to this
    itk_wrap_template("SSSCIUC3E3DIUC3" "${SSSCI_template}, itk::Image< unsigned char, 3 >")
  endif()
  if(ITK_WRAP_float)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("IF3SSSCIF3E3D" "itk::Image< float, 3 >, ${SSSCI_template}")
    # itk_wrap_template("SSSCIF3E3DSSSCIF3E3D" "${SSSCI_template}, ${SSSCI_template}")  # procedural form defaults to this
    itk_wrap_template("SSSCIF3E3DIF3" "${SSSCI_template}, itk::Image< float, 3 >")
  endif()
  if(ITK_WRAP_unsigned_char AND ITK_WRAP_float)
    set(SSSCI_F "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIF3E3DIUC3" "${SSSCI_F}, itk::Image< unsigned char, 3 >")
  endif()
itk_end_wrap_class()

itk_wrap_class("itk::ImageFileReader" POINTER)
  if(ITK_WRAP_unsigned_char)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIUC3E3D" "${SSSCI_template}")
  endif()
  if(ITK_WRAP_float)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIF3E3D" "${SSSCI_template}")
  endif()
itk_end_wrap_class()

itk_wrap_class("itk::ImageFileWriter" POINTER)
  if(ITK_WRAP_unsigned_char)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIUC3E3D" "${SSSCI_template}")
  endif()
  if(ITK_WRAP_float)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIF3E3D" "${SSSCI_template}")
  endif()
itk_end_wrap_class()

itk_wrap_class("itk::CastImageFilter" POINTER_WITH_2_SUPERCLASSES)
  if(ITK_WRAP_unsigned_char)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("IUC3SSSCIUC3E3D" "itk::Image< unsigned char, 3 >, ${SSSCI_template}")
    itk_wrap_template("SSSCIUC3E3DIUC3" "${SSSCI_template}, itk::Image< unsigned char, 3 >")
  endif()
  if(ITK_WRAP_float)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("IF3SSSCIF3E3D" "itk::Image< float, 3 >, ${SSSCI_template}")
    itk_wrap_template("SSSCIF3E3DIF3" "${SSSCI_template}, itk::Image< float, 3 >")
  endif()
  if(ITK_WRAP_unsigned_char AND ITK_WRAP_float)
    set(SSSCI_UC "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    set(SSSCI_F "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIUC3E3DSSSCIF3E3D" "${SSSCI_UC}, ${SSSCI_F}")
    itk_wrap_template("SSSCIF3E3DSSSCIUC3E3D" "${SSSCI_F}, ${SSSCI_UC}")
  endif()
itk_end_wrap_class()

itk_wrap_class("itk::RescaleIntensityImageFilter" POINTER_WITH_2_SUPERCLASSES)
  if(ITK_WRAP_unsigned_char AND ITK_WRAP_float)
    set(SSSCI_UC "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    set(SSSCI_F "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIF3E3DSSSCIUC3E3D" "${SSSCI_F}, ${SSSCI_UC}")
  endif()
itk_end_wrap_class()

# The rest is needed for ResampleImageFilter and interpolator functions
itk_wrap_include("itkResampleImageFilter.h")
itk_wrap_class("itk::ResampleImageFilter" POINTER)
  if(ITK_WRAP_unsigned_char)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("IUC3SSSCIUC3E3D" "itk::Image< unsigned char, 3 >, ${SSSCI_template}")
    itk_wrap_template("SSSCIUC3E3DIUC3" "${SSSCI_template}, itk::Image< unsigned char, 3 >")
    # itk_wrap_template("SSSCIUC3E3DSSSCIUC3E3D" "${SSSCI_template}, ${SSSCI_template}")  # itk.resample_image_filter defaults to this
  endif()
  if(ITK_WRAP_float)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("IF3SSSCIF3E3D" "itk::Image< float, 3 >, ${SSSCI_template}")
    itk_wrap_template("SSSCIF3E3DIF3" "${SSSCI_template}, itk::Image< float, 3 >")
    # itk_wrap_template("SSSCIF3E3DSSSCIF3E3D" "${SSSCI_template}, ${SSSCI_template}")  # itk.resample_image_filter defaults to this
  endif()
  if(ITK_WRAP_unsigned_char AND ITK_WRAP_float)
    set(SSSCI_F "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIF3E3DIUC3" "${SSSCI_F}, itk::Image< unsigned char, 3 >")
  endif()
itk_end_wrap_class()

itk_wrap_class("itk::ImageFunction" POINTER)
  if(ITK_WRAP_unsigned_char)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIUC3E3D${ITKM_D}" "${SSSCI_template}, ${ITKT_D}, ${ITKT_D}")
  endif()
  if(ITK_WRAP_float)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIF3E3D${ITKM_D}" "${SSSCI_template}, ${ITKT_D}, ${ITKT_D}")
  endif()
itk_end_wrap_class()

itk_wrap_class("itk::InterpolateImageFunction" POINTER)
  if(ITK_WRAP_unsigned_char)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIUC3E3D${ITKM_D}" "${SSSCI_template}, ${ITKT_D}")
  endif()
  if(ITK_WRAP_float)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIF3E3D${ITKM_D}" "${SSSCI_template}, ${ITKT_D}")
  endif()
itk_end_wrap_class()

itk_wrap_class("itk::NearestNeighborInterpolateImageFunction" POINTER)
  if(ITK_WRAP_unsigned_char)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIUC3E3D${ITKM_D}" "${SSSCI_template}, ${ITKT_D}")
  endif()
  if(ITK_WRAP_float)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIF3E3D${ITKM_D}" "${SSSCI_template}, ${ITKT_D}")
  endif()
itk_end_wrap_class()

itk_wrap_class("itk::LinearInterpolateImageFunction" POINTER)
  if(ITK_WRAP_unsigned_char)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIUC3E3D${ITKM_D}" "${SSSCI_template}, ${ITKT_D}")
  endif()
  if(ITK_WRAP_float)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIF3E3D${ITKM_D}" "${SSSCI_template}, ${ITKT_D}")
  endif()
itk_end_wrap_class()

itk_wrap_class("itk::GaussianInterpolateImageFunction" POINTER)
  if(ITK_WRAP_unsigned_char)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIUC3E3D${ITKM_D}" "${SSSCI_template}, ${ITKT_D}")
  endif()
  if(ITK_WRAP_float)
    set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
    itk_wrap_template("SSSCIF3E3D${ITKM_D}" "${SSSCI_template}, ${ITKT_D}")
  endif()
itk_end_wrap_class()

itk_wrap_include("itkWindowedSincInterpolateImageFunction.h")
set(window_functions "Hamming" "Cosine" "Welch" "Lanczos")
set(radii 2 3)
itk_wrap_class("itk::WindowedSincInterpolateImageFunction" POINTER)
  foreach(r ${radii}) # radius
    foreach(function ${window_functions})
      if(ITK_WRAP_unsigned_char)
        set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<unsigned char, 2>, itk::Euler3DTransform<double>>")
        itk_wrap_template("SSSCIUC3E3D${r}${function}" "${SSSCI_template}, ${r}, itk::Function::${function}WindowFunction< ${r} >")
      endif()
      if(ITK_WRAP_float)
        set(SSSCI_template "itk::SliceSeriesSpecialCoordinatesImage<itk::Image<float, 2>, itk::Euler3DTransform<double>>")
        itk_wrap_template("SSSCIF3E3D${r}${function}" "${SSSCI_template}, ${r}, itk::Function::${function}WindowFunction< ${r} >")
      endif()
    endforeach()
  endforeach()
itk_end_wrap_class()
